version: '3'
services:
  https-portal:
    image: steveltn/https-portal:1
    ports:
      - 80:80
      - 443:443
    restart: always
    environment:
      DOMAINS: '${DOMAIN} -> http://web'
      STAGE: ${STAGE}
    volumes:
      - https-portal-data:/var/lib/https-portal

  app:
    build: .
    env_file:
      - ./.env
    # command:  dockerize -wait tcp://db:3306 -timeout 20s bundle exec unicorn_rails -p 3000 -c ./config/unicorn.conf.rb
    command: "rm -f ./tmp/pids/unicorn.pid && rm -f ./tmp/sockets/.unicorn.sock && bundle exec unicorn_rails -c ./config/unicorn.conf.rb -D -E ${ENVIRONMENT}"
    volumes:
      - .:/var/www/rails/Moviest
      # - tmp-data:/myproject/tmp/sockets
      - ./public:/var/www/rails/Moviest/public
      - ./tmp:/var/www/rails/Moviest/tmp
      - ./log:/var/www/rails/Moviest/log
    tty: true
    stdin_open: true
    command: tail -f /dev/null
    depends_on:
      - db

  web:
    build:
      context: containers/nginx 
    volumes:
      # - tmp-data:/myproject/tmp/sockets
      - ./public:/var/www/rails/Moviest/public
      - ./tmp:/var/www/rails/Moviest/tmp
    # ports:
      # - 8000:8000

  db: 
    image: mysql:5.7
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports: 
      - '3306:3306'
    environment:
      MYSQL_DATABASE: Moviest_development
      MYSQL_ROOT_PASSWORD: password
      
      
    #dbのデータを永続化しておく
    volumes:
      - mysql-data:/var/lib/mysql


volumes:
    # public-data:
    # tmp-data:
    mysql-data:
    https-portal-data:
